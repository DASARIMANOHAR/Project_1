open destination folder and open terminal by cmd 

1.git init-------------------------------working directory
2.git status
3.git add code.txt [single files can add here]---------------------staging area
4.git commit -m "commiting code file and linux commands file" [all files will commit once we run command, so add files as you need from step 3] -----------------local repository
5.git remote add origin https://github.com/DASARIMANOHAR/Project_1
6.git branch [to check what branches we have in remote repos]
7.git push -u origin master-----------------------------------Remote repository

once done check files are uploaded to remote repository in this location https://github.com/DASARIMANOHAR/Project_1
          
8.press q to quit from an command in terminal 

9.git log to check recent commits 
10.git add . is used to add all files from working directory to staging 
11. git pull means remote repo data will come to local repo aswell as working directory
Command	                Description
git pull	        Default fetch and merge
git pull origin main	Pull from specific branch
git pull --rebase	Rebase instead of merge
git pull --all	        Pull from all remotes
git pull --verbose	Show detailed info
git pull --no-commit	Merge without committing
git pull --no-ff	Force merge commit
git pull --ff-only	Allow only fast-forward

12.git fetch only local repo will update but changes will not reflect to the working directory
13.git checkout [branchname] is used to switch between the branches


Git Commands Cheat Sheet
· Basic Git Configuration
git config --global user.name "Your Name"
git config --global user.email "you@example.com"
· Repository Setup
git init # Initialize a new Git repository
git clone <repo-url> # Clone an existing repository
· Staging and Committing
git status # Show the status of changes
git add <file> # Stage a specific file
git add . # Stage all changes
git commit -m "Message" # Commit staged changes with a message
· Branching and Merging
git branch # List branches
git branch <name> # Create a new branch
git checkout <name> # Switch to a branch
git checkout -b <name> # Create and switch to a new branch
git merge <branch> # Merge a branch into the current one
· Remote Repositories
git remote add origin <url> # Add a remote repository
git push -u origin <branch> # Push branch to remote and set upstream
git push # Push changes
git pull # Pull latest changes
git fetch # Fetch changes without merging
· Undoing Changes
git reset <file> # Unstage a file
git checkout -- <file> # Discard changes in a file
git revert <commit> # Revert a specific commit
git reset --hard <commit> # Reset to a specific commit (destructive)
· Viewing History
git log # View commit history
git log --oneline # Compact log view
git diff # Show changes between commits or working directory
